services:
  webserver:
    image: nginx                 
    container_name: webserver     
    restart: always              
    ports:
      - "80:80"     
    volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro

  postgres:
    image: postgres
    container_name: my-postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=supersecret123
      - POSTGRES_DB=minitwitter
    volumes:
      - ./docker-data/postgres:/var/lib/postgresql/data
    healthcheck:  # 游릭 Healthcheck hinzuf칲gen
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  minitwitter-1:
      build: 
        context: .
        dockerfile: Dockerfile
      image: nevce/server
      depends_on:
        postgres:
          condition: service_healthy  # 游릭 Backend wartet auf Datenbank
      environment:
        - DATABASE_URL=postgresql://postgres:supersecret123@postgres:5432/minitwitter
        - OLLAMA_HOST=http://ollama:11434
        - REDIS_HOST=redis
        - SERVER_ROLE=api
        - CACHE_ACTIVE=true # 游릭 Cache aktivieren / Zum deaktivieren true 칛ndern
      entrypoint: ["/app/entrypoint.sh"]

  minitwitter-2:
      build: 
        context: .
        dockerfile: Dockerfile
      image: nevce/server
      depends_on:
        postgres:
          condition: service_healthy  # 游릭 Backend wartet auf Datenbank
      environment:
        - DATABASE_URL=postgresql://postgres:supersecret123@postgres:5432/minitwitter
        - OLLAMA_HOST=http://ollama:11434
        - REDIS_HOST=redis
        - SERVER_ROLE=api
        - CACHE_ACTIVE=true # 游릭 Cache aktivieren / Zum deaktivieren true 칛ndern
      entrypoint: ["/app/entrypoint.sh"]
  
  minitwitter-frontend:
    build: 
      context: frontend
      dockerfile: Dockerfile
    environment:
    - NUXT_PUBLIC_API_BASE_URL=http://localhost:80 

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports: 
      - 12434:11434
    volumes:
      - ./docker-data/ollama:/root/.ollama
   

  redis:
    image: redis/redis-stack:latest
    ports:
      - 6379:6379
      - 8001:8001
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]

  minitwitter-worker:
    image: switzercheese/my-posts-api
    build: 
      context: .
      dockerfile: Dockerfile  
    environment:
    - DATABASE_URL=postgresql://postgres:supersecret123@postgres:5432/minitwitter
    - OLLAMA_HOST=http://ollama:11434
    - REDIS_HOST=redis
    - SERVER_ROLE=worker

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3100:3000